install.packages("tidyverse")
install.packages("httr")
install.packages("curl")
install.packages("curl")
install.packages("httr")
install.packages("openssl")
install.packages("tidyverse")
install.packages("xml2")
install.packages("tidyverse")
install.packages("raster")
install.packages("shiny")
n.colmeans = function(df, n = 10){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
state.x77
str(state.x77)
View(n.colmeans)
n.colmeans(state.x77, 10)
df <- state.x77
df[, mean(z), by= (seq(nrow(df)) - 1) %% n]
?aggregate
?gl
?ceiling
n.colmeans = function(df, n = 10){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
str(state.x77)
n.colmeans(state.x77, 10)
n.colmeans = function(df, n = 5){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
n.colmeans(state.x77, 5)
n.colmeans = function(df, n = 2){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
n.colmeans(state.x77, 2)
n.colmeans = function(df, n = 3){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
n.colmeans(state.x77, 3)
n.colmeans = function(df, n = 2.5){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
n.colmeans(state.x77, 2.5)
n.colmeans = function(df, n){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
n.colmeans(state.x77, 2.5)
n.colmeans(state.x77, 10)
n.colmeans = function(df, n =10){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
n.colmeans(state.x77)
n.colmeans = function(df, n){
aggregate(x = df,
by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
FUN = mean)
}
n.colmeans(state.x77)
n.colmeans(state.x77, 10)
n.colmeans(state.x77, 5)
n.colmeans(state.x77, 3)
n.colmeans(state.x77, 2.5)
library(ggtree)
library(Biostrings)
library(ggplot2)
library(seqinr)
library(tidyverse)
library(phangorn)
set.seed(2015-12-21)
tree <- rtree(30)
p <- ggtree(tree) + xlim(NA, 6)
p + geom_cladelabel(node=45, label="test label") +
geom_cladelabel(node=34, label="another clade")
ggtree(tree, lwd = 2, color = "darkgreen", alpha = 0.8, right = TRUE) +
geom_tiplab(size = 7, angle = 90, offset = 0.05) +
geom_point(aes(shape = isTip, color = isTip), size = 5, alpha = 0.6)
seqs6 = simSeq(tree, l = 60, type = "DNA", bf = c(1, 1, 3, 3)/8, rate = 0.1)
seqs6
class(seqs6)
seqs6
mat6df = data.frame(as.character(seqs6))
View(mat6df)
gheatmap(p, mat6df[, 1:60], offset = 0.01, colnames = FALSE)
setwd("/media/cristoichkov/Stoich/Doctorado/Fotos/Espinas/bin")
vec <- c(2, 3, 6, 2, 7)
class(vec)
typeof(vec)
vec_char <- c("blanco", "rojo", "azul", "rojo")
typeof(vec_char)
class(vec_char)
vec <- (1, 4, "blanco", "azul")
length(vec_char)
x <- c(1, 5.4, TRUE, "hello")
vec <- (1, 4, "blanco", "azul")length(vec_char)
vec <- (1, 4, "blanco", "azul")
vec <- c(1, 4, "blanco", "azul")
class(vec)
1:7
x <- 1:7
x <- 1:7; x
x <- 1:7
y <- 2:-2
seq(1, 3, by=0.2)
seq(1, 5, length.out=4)
seq(1, 5, length.out=4)
5/4
1 + 1.333333
1 + 1.333333 +1.3333
1 + 1.333333 +1.3333 + 1.3333
vec_num <- c(2, 3, 6, 2, 7, 10, 23)
vec_num[3]
vec_num[-6]
vec_num[vec_num < 7]
vec_num[vec_num <= 7]
x <- c(2, 3, 5, 4, 3)
x*5
x+5
y <- c(5, 4, 8, 7, 10)
x + y
y <- c(5, 4, 8, 7, 10, 6)
x + y
y + x
x <- c(1, 5)
x+5
y <- c(5, 2, 4, 5, 4, 2, 4, 5)
x + y
fruits <- c("Apple", "oranges", "banana")
vegetables <- c("cabbage", "spinach", "tomatoes")
all_basket_items <- c(fruits, vegetables)
all_basket_items
525/3
175*3
head(iris)
?head
head(iris, 10)
head(iris, -10)
tail(iris)
str(iris)
summary(iris)
colnames(iris)
length(iris)
nrow(iris)
iris[1:50]
iris[1:50,]
iris <- iris
iris
ncol(iris)
iris$Species == "setosa"
iris[iris$Species == "setosa", ]
summary(iris)
ls
ls()
iris[["Species"]]
iris["Species"]
iris[1:5,"Species"]
iris[1:50, "Species"]
iris[1:50, 2]
mean(iris[1:50, 2])
iris[[4]]
iris[[5]]
iris[5]
apply(iris, 1, FUN = sum)
apply(iris, MARGIN = 1, FUN = sum)
apply(iris[,1], MARGIN = 1, FUN = sum)
apply(iris[,1:4], MARGIN = 1, FUN = sum)
apply(iris[,1], MARGIN = 2, FUN = sum)
head(iris)
5.1     +    3.5     +     1.4    +     0.2
apply(iris[,1:4], MARGIN = 2, FUN = sum)
apply(iris[,1:4], MARGIN = 2, FUN = mean)
iris
quantile(iris$Sepal.Length)
boxplot(iris$Species, iris$Sepal.Length)
boxplot(, iris$Sepal.Length)
boxplot(iris$Sepal.Length)
boxplot(, iris$Sepal.Length)
boxplot(, iris$Sepal.Length)
boxplot(iris$Sepal.Length)
iris$size <- ifelse(iris$Sepal.Length < 5.1, "one",
ifelse((iris$Sepal.Length>=5.1) & (iris$Sepal.Length < 5.8), "two",
ifelse((iris$Sepal.Length >=5.8) & (iris$Sepal.Length < 6.4), "tree", "four")))
View(iris)
iris$size
setwd("~/Repos/Clases_R/Clase_4")
getwd()
cd ..
getwd()
